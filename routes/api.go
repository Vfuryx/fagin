package routes

import (
	"fagin/app"
	c "fagin/app/controllers" // 控制器
	"fagin/app/errno"
	m "fagin/app/middleware" // 中间件
	_ "fagin/docs"           // docs is generated by Swag CLI, you have to import it.
	"github.com/gin-gonic/gin"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
)

func InitRoute() *gin.Engine {

	r := gin.New()

	r.Use(gin.Logger())

	r.Use(gin.Recovery(), m.RecoveryLog())

	//test
	r.GET("/", c.IndexController.Index)

	// use ginSwagger middleware to
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	api := r.Group("/api/v1").Use()
	{


		// 用户登陆 获取token
		api.POST("/login", c.AuthController.Login)
		// 注册用户
		api.POST("/register", c.UserController.Register)

		// 需要登陆才能调用
		api.Use(m.Auth.IsLogin(), m.Auth.AuthCheckRole())
		{
			api.GET("/", c.IndexController.Index)
			api.POST("/", c.IndexController.Index)
			api.DELETE("/", c.IndexController.Index)
			api.GET("/logout", c.AuthController.Logout)
			api.GET("/add", c.AuthController.CreateUser)
		}

	}

	// 未知路由处理 404
	r.NoRoute(func(ctx *gin.Context) {
		app.JosnResponse(ctx, errno.NotFound, nil)
	})
	// 未知调用方式
	r.NoMethod(func(ctx *gin.Context) {
		app.JosnResponse(ctx, errno.NotFound, nil)
	})

	return r
}
